{"version":3,"sources":["utils/context.js","components/Home.js","components/PredictorForm.js","components/Result.js","components/Login.js","components/Register.js","components/Auth.js","App.js","index.js"],"names":["Context","createContext","Home","to","PredictorForm","history","useHistory","context","useContext","useState","pregnancies","setPregnancies","glucose","setGlucose","bloodpressure","setBloodpressure","skinthickness","setSkinthickness","insulin","setInsulin","bmi","setBmi","dpf","setDpf","age","setAge","handleSubmit","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","console","log","assignPredictionFunction","push","onSubmit","className","type","placeholder","onChange","target","value","Result","result","statePrediction","Login","props","email","setEmail","password","setPassword","fName","setFName","lName","setLName","assignTokenFunction","token","stateToken","firstname","lastname","Register","regFormPage","setFirstName","setLastName","setConfirmPassword","nameEmailPassword","setNameEmailPassword","onClick","Auth","gradientDisplay","resizeTimer","loginRegister","setLoginRegister","window","addEventListener","document","classList","add","clearTimeout","setTimeout","remove","assignLoginRegister","loginRegisterState","CSSTransition","in","timeout","classNames","unmountOnExit","assignLoginReg","App","prediction","setPrediction","setToken","Provider","pred","assignPrediction","assignToken","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"js/main.24b3c143.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <Link to='/predict'>Go To Predictor</Link><br />\r\n            <Link to='/auth'>Go To Login/Register</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Context from '../utils/context';\r\n\r\nconst PredictorForm = () => {\r\n    //Values that give a prediction outcome of True (Have Diabetes) for\r\n    //the Random Forest Classification model:\r\n    \r\n    //const testData = {\r\n    //    pregnancies: 1,\r\n    //    glucose: 117,\r\n    //    bloodpressure: 88,\r\n    //    skinthickness: 24,\r\n    //    insulin: 145,\r\n    //    bmi: 34.5,\r\n    //    dpf: 0.403,\r\n    //    age: 40\r\n    //}\r\n    \r\n    let history = useHistory();\r\n    const context = useContext(Context);\r\n\r\n    const [pregnancies, setPregnancies] = useState(0);\r\n    const [glucose, setGlucose] = useState(0);\r\n    const [bloodpressure, setBloodpressure] = useState(0);\r\n    const [skinthickness, setSkinthickness] = useState(0);\r\n    const [insulin, setInsulin] = useState(0);\r\n    const [bmi, setBmi] = useState(0);\r\n    const [dpf, setDpf] = useState(0);\r\n    const [age, setAge] = useState(0);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n            const response = await fetch('/api/predict', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    pregnancies,\r\n                    glucose,\r\n                    bloodpressure,\r\n                    skinthickness,\r\n                    insulin,\r\n                    bmi,\r\n                    dpf,\r\n                    age\r\n                })\r\n            })\r\n\r\n            const json = await response.json();\r\n            console.log(json[0]);\r\n            context.assignPredictionFunction(json[0])\r\n            history.push('/results')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Predictor Form</h1>\r\n            \r\n            <form onSubmit={handleSubmit} className=\"predict-container\">\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Pregnancies\" onChange={e => setPregnancies(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Glucose\" onChange={e => setGlucose(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Bloodpressure\" onChange={e => setBloodpressure(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Skinthickness\" onChange={e => setSkinthickness(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Insulin\" onChange={e => setInsulin(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Bmi\" onChange={e => setBmi(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Dpf\" onChange={e => setDpf(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Age\" onChange={e => setAge(e.target.value)}/>\r\n                <button className=\"predict-form-item\" type=\"submit\">Predict</button>\r\n            </form>\r\n            <Link to='/'>Go Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PredictorForm;","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Context from '../utils/context';\r\n\r\nconst Result = () => {\r\n    const context = useContext(Context);\r\n    let result;\r\n\r\n    if (context.statePrediction) {\r\n        result = <h2 className='result-bad'>Oops! You have DIABETES.</h2>;\r\n    }\r\n    else {\r\n        result = <h2 className='result-good'>Great! You DON'T have diabetes.</h2>;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Results</h1>\r\n            {result}\r\n            <Link to='/predict'>Go to Predictor</Link>\r\n            <br />\r\n            <Link to='/'>Go home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState, useContext } from 'react';\r\nimport '../css/Login.css';\r\nimport Context from '../utils/context'\r\n\r\nconst Login = (props) => {\r\n    const context = useContext(Context);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [fName, setFName] = useState('');\r\n    const [lName, setLName] = useState('');\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let response;\r\n        let json;\r\n        //Perform front-end form validation before sending to posting to back-end\r\n        \r\n\r\n        //Post email and password to back end and get authenticated\r\n        response = await fetch('/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        })\r\n\r\n        json = await response.json();\r\n        context.assignTokenFunction(json.token, async() => {\r\n            console.log(context.stateToken);\r\n\r\n            if (context.stateToken){\r\n                response = await fetch('/api/user', {headers: { 'x-access-tokens': context.stateToken}});\r\n                json = await response.json();\r\n                console.log(json.firstname);\r\n                setFName(', ' + json.firstname, () => {\r\n                    setLName(json.lastname);\r\n                });\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    //Password field should be secured and should not be openly updated in state\r\n\r\n    return (\r\n        <div className='login-container'>\r\n            <h1 className='welcome-message'>Welcome{fName} {lName}</h1>\r\n            <form className='login-form' onSubmit={handleSubmit}>\r\n                <input className='login-form-item login-input' type='text' placeholder='Email' onChange={e => setEmail(e.target.value)}/>\r\n                <input className='login-form-item login-input' type='password' placeholder='Password' onChange={e => setPassword(e.target.value)}/>\r\n                <button className='login-form-item login-button' type='submit'>Sign in</button>\r\n            </form>\r\n            <h3 className='forgot-password'>Forgot your password?</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport '../css/Register.css';\r\n\r\nconst Register = (props) => {\r\n    const [email, setEmail] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [nameEmailPassword, setNameEmailPassword] = useState(0);\r\n\r\n    let regFormPage;\r\n    \r\n    \r\n    const handleNameNext = (e) => {\r\n        e.preventDefault();\r\n        setNameEmailPassword(1);\r\n        //Enter authentication code here to validate user credentials\r\n    }\r\n\r\n    const handleEmailNext = (e) => {\r\n        e.preventDefault();\r\n        setNameEmailPassword(2);\r\n        //Enter authentication code here to validate user credentials\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //Enter authentication code here to validate user credentials\r\n    }\r\n\r\n\r\n    if (nameEmailPassword === 0) {\r\n        regFormPage = (\r\n            <form className='register-form' onSubmit={handleNameNext}>\r\n                <input className='register-form-item register-input' type='text' placeholder='First Name' onChange={e => setFirstName(e.target.value)}/>\r\n                <input className='register-form-item register-input' type='text' placeholder='Last Name' onChange={e => setLastName(e.target.value)}/>\r\n                <div className='submission-buttons'>\r\n                    <button className='register-form-item register-button' type='submit'>Next</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    else if (nameEmailPassword === 1) {\r\n        regFormPage = (\r\n            <form className='register-form' onSubmit={handleEmailNext}>\r\n                <input className='register-form-item register-input' type='text' placeholder='Email' onChange={e => setEmail(e.target.value)}/>\r\n                <div className='submission-buttons'>\r\n                    <button className='register-form-item back-button' type='button' onClick={() => setNameEmailPassword(0)}>Back</button>\r\n                    <div className='register-form-item'></div>\r\n                    <button className='register-form-item register-button' type='submit'>Next</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    else {\r\n        regFormPage = (\r\n            <form className='register-form' onSubmit={handleSubmit}>\r\n                <input className='register-form-item register-input' type='text' placeholder='Password' onChange={e => setPassword(e.target.value)}/>\r\n                <input className='register-form-item register-input' type='text' placeholder='Confirm Password' onChange={e => setConfirmPassword(e.target.value)}/>\r\n                <div className='submission-buttons'>\r\n                    <button className='register-form-item back-button' type='button' onClick={() => setNameEmailPassword(1)}>Back</button>\r\n                    <div className='register-form-item'></div>\r\n                    <button className='register-form-item register-button' type='submit'>Sign up</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n     //Password field should be secured and should not be openly updated in state\r\n\r\n    return (\r\n        <div className='register-container'>\r\n            <h1 className='welcome-message'>Create account</h1>\r\n            {regFormPage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport { CSSTransition } from 'react-transition-group'; \r\nimport '../css/Auth.css';\r\n\r\nconst Auth = () => {\r\n    const [loginRegister, setLoginRegister] = useState(false);\r\n    let gradientDisplay;\r\n    let resizeTimer;\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n    document.body.classList.add(\"resize-animation-stopper\");\r\n    clearTimeout(resizeTimer);\r\n    resizeTimer = setTimeout(() => {\r\n        document.body.classList.remove(\"resize-animation-stopper\");\r\n    }, 400);\r\n    });\r\n\r\n    const assignLoginRegister = (loginRegisterState) => {\r\n        setLoginRegister(loginRegisterState);\r\n    }\r\n\r\n    if (loginRegister) {\r\n            gradientDisplay = ( <div className=\"gradient-display-background gradient-display-background-register\">\r\n                                    <div className='gradient-display gradient-display-register-rtrue'>\r\n                                        <h1 className='gradient-display-text'>Already have an account?</h1>\r\n                                        <button  onClick={() => setLoginRegister(false)} className='gradient-display-button gradient-display-button-red'>Login</button>\r\n                                    </div>\r\n                                    <div className='gradient-display gradient-display-register-bfalse'></div>\r\n                                </div>);\r\n    }\r\n\r\n    else {\r\n            gradientDisplay = ( <div className=\"gradient-display-background gradient-display-background-login\">\r\n                                    <div className='gradient-display gradient-display-login-rfalse'></div>\r\n                                    <div className='gradient-display gradient-display-login-btrue'>\r\n                                        <h1 className='gradient-display-text'>Don't have an account?</h1>\r\n                                        <button onClick={() => setLoginRegister(true)} className='gradient-display-button gradient-display-button-blue'>Register</button>\r\n                                    </div>\r\n                                </div>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            {gradientDisplay}\r\n\r\n            <div className='fill'>\r\n                <CSSTransition\r\n                    in={loginRegister}\r\n                    timeout={500}\r\n                    classNames=\"reg-transition\"\r\n                    unmountOnExit\r\n                >\r\n                    <Register assignLoginReg={(loginRegisterState) => assignLoginRegister(loginRegisterState)}/>\r\n                </CSSTransition>\r\n            </div>\r\n            <div className='fill'>\r\n                <CSSTransition\r\n                    in={!loginRegister}\r\n                    timeout={500}\r\n                    classNames=\"login-transition\"\r\n                    unmountOnExit\r\n                >\r\n                    <Login assignLoginReg={(loginRegisterState) => assignLoginRegister(loginRegisterState)}/>\r\n                </CSSTransition>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Context from './utils/context';\nimport Home from './components/Home';\nimport PredictorForm from './components/PredictorForm';\nimport Result from './components/Result';\nimport Auth from './components/Auth';\n\nfunction App() {\n  const [prediction, setPrediction] = useState(false);\n  const [token, setToken] = useState();\n\n  const assignPrediction = (pred) => {\n    setPrediction(pred);\n  }\n\n  const assignToken = (token) => {\n    setToken(token);\n  }\n  \n  return (\n    <Context.Provider value = {{\n      statePrediction: prediction,\n      assignPredictionFunction: (pred) => assignPrediction(pred),\n      stateToken: token,\n      assignTokenFunction: (token) => assignToken(token)\n    }}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/predict' component={PredictorForm}/>\n            <Route exact path='/results' component={Result}/>\n            <Route exact path='/auth' component={Auth}/>\n          </Switch>\n        </div>\n      </Router>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}