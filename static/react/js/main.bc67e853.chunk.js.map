{"version":3,"sources":["utils/context.js","components/Home.js","components/PredictorForm.js","components/Result.js","components/Login.js","components/Register.js","components/Auth.js","App.js","index.js"],"names":["Context","createContext","Home","to","PredictorForm","history","useHistory","context","useContext","useState","pregnancies","setPregnancies","glucose","setGlucose","bloodpressure","setBloodpressure","skinthickness","setSkinthickness","insulin","setInsulin","bmi","setBmi","dpf","setDpf","age","setAge","handleSubmit","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","console","log","assignPredictionFunction","push","onSubmit","className","type","placeholder","onChange","target","value","Result","result","statePrediction","Login","props","email","setEmail","password","setPassword","fName","setFName","lName","setLName","assignTokenFunction","token","firstName","lastName","Register","regFormPage","setFirstName","setLastName","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","nameEmailPassword","setNameEmailPassword","healthCard","onClick","Auth","gradientDisplay","resizeTimer","loginRegister","setLoginRegister","window","addEventListener","document","classList","add","clearTimeout","setTimeout","remove","assignLoginRegister","loginRegisterState","CSSTransition","in","timeout","classNames","unmountOnExit","assignLoginReg","App","prediction","setPrediction","setToken","Provider","pred","assignPrediction","stateToken","assignToken","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"js/main.bc67e853.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <Link to='/predict'>Go To Predictor</Link><br />\r\n            <Link to='/auth'>Go To Login/Register</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Context from '../utils/context';\r\n\r\nconst PredictorForm = () => {\r\n    //Values that give a prediction outcome of True (Have Diabetes) for\r\n    //the Random Forest Classification model:\r\n    \r\n    //const testData = {\r\n    //    pregnancies: 1,\r\n    //    glucose: 117,\r\n    //    bloodpressure: 88,\r\n    //    skinthickness: 24,\r\n    //    insulin: 145,\r\n    //    bmi: 34.5,\r\n    //    dpf: 0.403,\r\n    //    age: 40\r\n    //}\r\n    \r\n    let history = useHistory();\r\n    const context = useContext(Context);\r\n\r\n    const [pregnancies, setPregnancies] = useState(0);\r\n    const [glucose, setGlucose] = useState(0);\r\n    const [bloodpressure, setBloodpressure] = useState(0);\r\n    const [skinthickness, setSkinthickness] = useState(0);\r\n    const [insulin, setInsulin] = useState(0);\r\n    const [bmi, setBmi] = useState(0);\r\n    const [dpf, setDpf] = useState(0);\r\n    const [age, setAge] = useState(0);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n            const response = await fetch('/api/predict', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    pregnancies,\r\n                    glucose,\r\n                    bloodpressure,\r\n                    skinthickness,\r\n                    insulin,\r\n                    bmi,\r\n                    dpf,\r\n                    age\r\n                })\r\n            })\r\n\r\n            const json = await response.json();\r\n            console.log(json[0]);\r\n            context.assignPredictionFunction(json[0])\r\n            history.push('/results')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Predictor Form</h1>\r\n            \r\n            <form onSubmit={handleSubmit} className=\"predict-container\">\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Pregnancies\" onChange={e => setPregnancies(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Glucose\" onChange={e => setGlucose(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Bloodpressure\" onChange={e => setBloodpressure(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Skinthickness\" onChange={e => setSkinthickness(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Insulin\" onChange={e => setInsulin(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Bmi\" onChange={e => setBmi(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Dpf\" onChange={e => setDpf(e.target.value)}/>\r\n                <input className=\"predict-form-item\" type=\"text\" placeholder=\"Age\" onChange={e => setAge(e.target.value)}/>\r\n                <button className=\"predict-form-item\" type=\"submit\">Predict</button>\r\n            </form>\r\n            <Link to='/'>Go Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PredictorForm;","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Context from '../utils/context';\r\n\r\nconst Result = () => {\r\n    const context = useContext(Context);\r\n    let result;\r\n\r\n    if (context.statePrediction) {\r\n        result = <h2 className='result-bad'>Oops! You have DIABETES.</h2>;\r\n    }\r\n    else {\r\n        result = <h2 className='result-good'>Great! You DON'T have diabetes.</h2>;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Results</h1>\r\n            {result}\r\n            <Link to='/predict'>Go to Predictor</Link>\r\n            <br />\r\n            <Link to='/'>Go home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport '../css/Login.css';\r\nimport Context from '../utils/context'\r\n\r\nconst Login = (props) => {\r\n    const context = useContext(Context);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [fName, setFName] = useState('');\r\n    const [lName, setLName] = useState('');\r\n\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let response;\r\n        let json;\r\n        //Perform front-end form validation before sending to posting to back-end\r\n        \r\n\r\n        //Post email and password to back end and get authenticated\r\n        response = await fetch('/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        })\r\n\r\n        json = await response.json();\r\n        context.assignTokenFunction(json.token);\r\n        console.log(json);\r\n\r\n        if (json.token){\r\n            response = await fetch('/api/user', {headers: { 'x-access-tokens': json.token}});\r\n            json = await response.json();\r\n            console.log(json.firstName);\r\n            setFName(', ' + json.firstName);\r\n            setLName(json.lastName);\r\n        }\r\n        \r\n    }\r\n\r\n    //Password field should be secured and should not be openly updated in state\r\n\r\n    return (\r\n        <div className='login-container'>\r\n            <h1 className='welcome-message'>Welcome{fName} {lName}</h1>\r\n            <form className='login-form' onSubmit={handleSubmit}>\r\n                <input className='login-form-item login-input' type='text' placeholder='Email' onChange={e => setEmail(e.target.value)}/>\r\n                <input className='login-form-item login-input' type='password' placeholder='Password' onChange={e => setPassword(e.target.value)}/>\r\n                <button className='login-form-item login-button' type='submit'>Sign in</button>\r\n            </form>\r\n            <h3 className='forgot-password'>Forgot your password?</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport '../css/Register.css';\r\n\r\nconst Register = (props) => {\r\n    const [email, setEmail] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n    const [nameEmailPassword, setNameEmailPassword] = useState(0);\r\n\r\n    let regFormPage;\r\n    \r\n    \r\n    const handleNameNext = (e) => {\r\n        e.preventDefault();\r\n        setNameEmailPassword(1);\r\n    }\r\n\r\n    const handleEmailNext = (e) => {\r\n        e.preventDefault();\r\n        setNameEmailPassword(2);\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const response = await fetch('/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                healthCard: '',\r\n                phoneNumber,\r\n                password\r\n            })\r\n        })\r\n\r\n        const json = await response.json();\r\n        console.log(json);\r\n    }\r\n\r\n\r\n    if (nameEmailPassword === 0) {\r\n        regFormPage = (\r\n            <form className='register-form' onSubmit={handleNameNext}>\r\n                <input className='register-form-item register-input' value={firstName} type='text' placeholder='First Name' onChange={e => setFirstName(e.target.value)}/>\r\n                <input className='register-form-item register-input' value={lastName} type='text' placeholder='Last Name' onChange={e => setLastName(e.target.value)}/>\r\n                <div className='submission-buttons'>\r\n                    <button className='register-form-item register-button' type='submit'>Next</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    else if (nameEmailPassword === 1) {\r\n        regFormPage = (\r\n            <form className='register-form' onSubmit={handleEmailNext}>\r\n                <input className='register-form-item register-input' value={email} type='text' placeholder='Email' onChange={e => setEmail(e.target.value)}/>\r\n                <input className='register-form-item register-input' value={phoneNumber} type='text' placeholder='Phone Number' onChange={e => setPhoneNumber(e.target.value)}/>\r\n                <div></div>\r\n                <div className='submission-buttons'>\r\n                    <button className='register-form-item back-button' type='button' onClick={() => setNameEmailPassword(0)}>Back</button>\r\n                    <div className='register-form-item'></div>\r\n                    <button className='register-form-item register-button' type='submit'>Next</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    else {\r\n        regFormPage = (\r\n            <form className='register-form' onSubmit={handleSubmit}>\r\n                <input className='register-form-item register-input' value={password} type='text' placeholder='Password' onChange={e => setPassword(e.target.value)}/>\r\n                <input className='register-form-item register-input' value={confirmPassword} type='text' placeholder='Confirm Password' onChange={e => setConfirmPassword(e.target.value)}/>\r\n                <div className='submission-buttons'>\r\n                    <button className='register-form-item back-button' type='button' onClick={() => setNameEmailPassword(1)}>Back</button>\r\n                    <div className='register-form-item'></div>\r\n                    <button className='register-form-item register-button' type='submit'>Sign up</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n     //Password field should be secured and should not be openly updated in state\r\n\r\n    return (\r\n        <div className='register-container'>\r\n            <h1 className='welcome-message'>Create account</h1>\r\n            {regFormPage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport { CSSTransition } from 'react-transition-group'; \r\nimport '../css/Auth.css';\r\n\r\nconst Auth = () => {\r\n    const [loginRegister, setLoginRegister] = useState(false);\r\n    let gradientDisplay;\r\n    let resizeTimer;\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n    document.body.classList.add(\"resize-animation-stopper\");\r\n    clearTimeout(resizeTimer);\r\n    resizeTimer = setTimeout(() => {\r\n        document.body.classList.remove(\"resize-animation-stopper\");\r\n    }, 400);\r\n    });\r\n\r\n    const assignLoginRegister = (loginRegisterState) => {\r\n        setLoginRegister(loginRegisterState);\r\n    }\r\n\r\n    if (loginRegister) {\r\n            gradientDisplay = ( <div className=\"gradient-display-background gradient-display-background-register\">\r\n                                    <div className='gradient-display gradient-display-register-rtrue'>\r\n                                        <h1 className='gradient-display-text'>Already have an account?</h1>\r\n                                        <button  onClick={() => setLoginRegister(false)} className='gradient-display-button gradient-display-button-red'>Login</button>\r\n                                    </div>\r\n                                    <div className='gradient-display gradient-display-register-bfalse'></div>\r\n                                </div>);\r\n    }\r\n\r\n    else {\r\n            gradientDisplay = ( <div className=\"gradient-display-background gradient-display-background-login\">\r\n                                    <div className='gradient-display gradient-display-login-rfalse'></div>\r\n                                    <div className='gradient-display gradient-display-login-btrue'>\r\n                                        <h1 className='gradient-display-text'>Don't have an account?</h1>\r\n                                        <button onClick={() => setLoginRegister(true)} className='gradient-display-button gradient-display-button-blue'>Register</button>\r\n                                    </div>\r\n                                </div>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            {gradientDisplay}\r\n\r\n            <div className='fill'>\r\n                <CSSTransition\r\n                    in={loginRegister}\r\n                    timeout={500}\r\n                    classNames=\"reg-transition\"\r\n                    unmountOnExit\r\n                >\r\n                    <Register assignLoginReg={(loginRegisterState) => assignLoginRegister(loginRegisterState)}/>\r\n                </CSSTransition>\r\n            </div>\r\n            <div className='fill'>\r\n                <CSSTransition\r\n                    in={!loginRegister}\r\n                    timeout={500}\r\n                    classNames=\"login-transition\"\r\n                    unmountOnExit\r\n                >\r\n                    <Login assignLoginReg={(loginRegisterState) => assignLoginRegister(loginRegisterState)}/>\r\n                </CSSTransition>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Context from './utils/context';\nimport Home from './components/Home';\nimport PredictorForm from './components/PredictorForm';\nimport Result from './components/Result';\nimport Auth from './components/Auth';\n\nfunction App() {\n  const [prediction, setPrediction] = useState(false);\n  const [token, setToken] = useState();\n\n  const assignPrediction = (pred) => {\n    setPrediction(pred);\n  }\n\n  const assignToken = (token) => {\n    setToken(token);\n  }\n  \n  return (\n    <Context.Provider value = {{\n      statePrediction: prediction,\n      assignPredictionFunction: (pred) => assignPrediction(pred),\n      stateToken: token,\n      assignTokenFunction: (token) => assignToken(token)\n    }}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/predict' component={PredictorForm}/>\n            <Route exact path='/results' component={Result}/>\n            <Route exact path='/auth' component={Auth}/>\n          </Switch>\n        </div>\n      </Router>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}